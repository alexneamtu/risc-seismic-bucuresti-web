{"version":3,"sources":["Search.js","index.js"],"names":["Search","state","address","addressNumber","items","handleOnChange","evt","setState","target","name","value","handleSearch","e","preventDefault","makeApiCall","searchUrl","fetch","then","response","json","jsonData","id","href","onSubmit","this","type","placeholder","onChange","event","onClick","map","item","index","className","key","street_type","buildingRatings","seismicRating","Intl","DateTimeFormat","year","month","day","format","Date","updatedAt","district","apartmentNumber","heightRegime","yearOfConstruction","yearOfExpertise","expertName","surfaceSize","comments","Component","ReactDOM","render","document","getElementById"],"mappings":"iUA0FeA,G,iNAtFXC,MAAQ,CACJC,QAAS,GACTC,cAAe,GACfC,MAAO,I,EAGXC,eAAiB,SAACC,GACd,EAAKC,SAAL,eACO,EAAKN,MADZ,eAEKK,EAAIE,OAAOC,KAAOH,EAAIE,OAAOE,U,EAItCC,aAAe,SAACC,GACZA,EAAEC,iBACF,EAAKC,YAAY,EAAKb,MAAMC,QAAS,EAAKD,MAAME,gB,EAGpDW,YAAc,SAACZ,EAASC,GACpB,IAAMY,EAAS,sEAAkEb,EAAlE,mBAAoFC,GACnGa,MAAMD,GACDE,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKb,SAAS,CAACH,MAAOgB,Q,wEAIxB,IAAD,OACL,OACI,yBAAKC,GAAG,QACJ,qEACA,0GACA,6HACA,mJACA,qEAA0C,uBAAGC,KAAK,mEAAR,SAC1C,6BACA,0BAAMC,SAAUC,KAAKb,cACjB,2BACIF,KAAK,UACLgB,KAAK,OACLC,YAAY,SACZC,SAAU,SAAAC,GAAK,OAAI,EAAKvB,eAAeuB,IACvClB,MAAOc,KAAKvB,MAAMC,UAEtB,2BACIO,KAAK,gBACLgB,KAAK,OACLE,SAAU,SAAAC,GAAK,OAAI,EAAKvB,eAAeuB,IACvCF,YAAY,QACZhB,MAAOc,KAAKvB,MAAME,gBAEtB,4BAAQ0B,QAASL,KAAKb,cAAtB,UAGJ,yBAAKU,GAAG,mBACHG,KAAKvB,MAAMG,MAAM0B,KAAI,SAACC,EAAMC,GAAP,OAClB,yBAAKC,UAAU,cAAcC,IAAKF,GAC9B,4BAAKD,EAAKI,YAAV,IAAwBJ,EAAK7B,QAA7B,KAAwC6B,EAAK5B,eAC7C,4BAAK4B,EAAKK,gBAAgB,GAAGC,eAC7B,6BACA,4BACI,4CAAkB,IAAIC,KAAKC,eAAe,QAAS,CAC/CC,KAAM,UACNC,MAAO,OACPC,IAAK,YACNC,OAAO,IAAIC,KAAKb,EAAKc,aACxB,uCAAad,EAAKe,UAClB,kDAAwBf,EAAKgB,iBAC7B,+CAAqBhB,EAAKiB,cAC1B,+CAAqBjB,EAAKkB,oBAC1B,6CAAmBlB,EAAKmB,iBACxB,8CAAoBnB,EAAKoB,YACzB,0CAAgBpB,EAAKqB,aACrB,2CAAiBrB,EAAKsB,qB,GA5EjCC,cCGrBC,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,W","file":"static/js/main.9370bb8e.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport \"./Search.css\";\n\nclass Search extends Component {\n    state = {\n        address: \"\",\n        addressNumber: \"\",\n        items: []\n    };\n\n    handleOnChange = (evt) => {\n        this.setState({\n            ...this.state,\n            [evt.target.name]: evt.target.value,\n        })\n    };\n\n    handleSearch = (e) => {\n        e.preventDefault();\n        this.makeApiCall(this.state.address, this.state.addressNumber);\n    };\n\n    makeApiCall = (address, addressNumber) => {\n        const searchUrl = `https://risc-seismic-bucuresti.herokuapp.com/routes?address=${address}&number=${addressNumber}`;\n        fetch(searchUrl)\n            .then(response => {\n                return response.json();\n            })\n            .then(jsonData => {\n                this.setState({items: jsonData});\n            });\n    };\n\n    render() {\n        return (\n            <div id=\"main\">\n                <h1>Cautare rapida risc seismic Bucuresti</h1>\n                <p>Din motive tehnice, serverul se opreste dupa 30 de minute de inactivitate. </p>\n                <p>Din acest motiv daca nu se returneaza rezultate din prima, incercati din noi in 30 de secunde.</p>\n                <p>Am investit fix 4 ore in proiectul asta. E departe de a fi perfect. Daca vad ca exista interes, mai investesc in el.</p>\n                <p>Pentru orice problema creati un tichet <a href=\"https://github.com/alexneamtu/risc-seismic-bucuresti-web/issues\">aici</a></p>\n                <br/>\n                <form onSubmit={this.handleSearch}>\n                    <input\n                        name=\"address\"\n                        type=\"text\"\n                        placeholder=\"Adresa\"\n                        onChange={event => this.handleOnChange(event)}\n                        value={this.state.address}\n                    />\n                    <input\n                        name=\"addressNumber\"\n                        type=\"text\"\n                        onChange={event => this.handleOnChange(event)}\n                        placeholder=\"Numar\"\n                        value={this.state.addressNumber}\n                    />\n                    <button onClick={this.handleSearch}>Cauta</button>\n                </form>\n\n                <div id=\"items-container\">\n                    {this.state.items.map((item, index) => (\n                        <div className=\"single-item\" key={index}>\n                            <h2>{item.street_type} {item.address}, {item.addressNumber}</h2>\n                            <h4>{item.buildingRatings[0].seismicRating}</h4>\n                            <br/>\n                            <ul>\n                                <li>Actualizare: {new Intl.DateTimeFormat(\"ro-RO\", {\n                                    year: \"numeric\",\n                                    month: \"long\",\n                                    day: \"2-digit\"\n                                }).format(new Date(item.updatedAt))}</li>\n                                <li>Sector: {item.district}</li>\n                                <li>Numar apartamente: {item.apartmentNumber}</li>\n                                <li>Regim inaltime: {item.heightRegime}</li>\n                                <li>An constructie: {item.yearOfConstruction}</li>\n                                <li>An expertiza: {item.yearOfExpertise}</li>\n                                <li>Expertizat de: {item.expertName}</li>\n                                <li>Suprafata: {item.surfaceSize}</li>\n                                <li>Comentarii: {item.comments}</li>\n                            </ul>\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Search from './Search';\n\n\nReactDOM.render(<Search />, document.getElementById('root'));\n"],"sourceRoot":""}